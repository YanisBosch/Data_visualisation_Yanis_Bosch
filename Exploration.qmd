---
title: "Data visualisation project"
author: "Yanis Bosch"
date: "19-01-2024"
---

#-------------------RUN FIRST-------------------

```{r}
library(tidyverse)
library(readr)
library(lubridate)
library(ggplot2)
library(broom)
library(hexbin)
library(gridExtra)
library(cowplot)
```

```{r}
  #download.file("https://www.kaggle.com/datasets/spandey8312/real-estate-2001-to-2020-state-of-connecticut-usa/download?datasetVersionNumber=1","data/archive")
  #unzip("data/archive")
  #COULD NOT DOWNLOAD CSV FILE AUTOMATICALLY IN R CODE FROM KAGGLE AS IT ALWAYS SEEMS TO DOWNLOAD A HTML TEXT FILE
  #=>THE CSV FILE HAS TO BE DOWNLOADED MANUALLY
  #DOWNLOAD LINK: https://www.kaggle.com/datasets/spandey8312/real-estate-2001-to-2020-state-of-connecticut-usa/download?datasetVersionNumber=1
```

```{r}
  housing_Connecticut <- read_csv("data/Real Estate 2001 to 2020 USA.csv",col_types = "cicccdd?cc??") |> rename_with(~ tolower(gsub(" ", "_", .x, fixed = TRUE)))
  housing_Connecticut
  housing_Connecticut <- housing_Connecticut |> mutate(property_type = case_when(
                      str_detect(property_type,"Single Family") ~ "Residential",
                      str_detect(property_type,"Two Family") ~ "Residential",
                      str_detect(property_type,"Three Family") ~ "Residential",
                      str_detect(property_type,"Four Family") ~ "Residential",
                      str_detect(property_type,"Vacant Land") ~ "Others",
                      str_detect(property_type,"Apartments") ~ "Residential",
                      str_detect(property_type,"Others") ~ "Others",
                      str_detect(property_type,"Residential") ~ "Residential",
                      str_detect(property_type,"Industrial") ~ "Industrial",
                      str_detect(property_type,"Commercial") ~ "Commercial",
                      str_detect(property_type,"Condo") ~ "Residential")) |>
                      mutate(sale_amount = replace(sale_amount, sale_amount <= 0, 1))|>
                      mutate(assessed_value = replace(assessed_value, assessed_value <= 0, 1))|>
                      mutate(sales_ratio = assessed_value/sale_amount) |>
                      mutate(date_recorded = mdy(date_recorded)) |>
                      mutate(sale_diff = abs(sale_amount-assessed_value)) |>
                      filter(assessed_value != 1 & sale_amount != 1) |>
                      arrange(-sales_ratio)
  housing_Connecticut
```

#-------------------------------------

#-------------------EXPLORATION-------------------

```{r}
housing_Connecticut |> filter(residential_type == "Single Family") |> ggplot() +
                      geom_col(aes(y = sale_amount,x = fct_reorder(serial_number,date_recorded))) +
                      ylim(0,7000000)
```

```{r}
housing_Connecticut |> select(c(date_recorded,sale_amount)) |> group_by(month = lubridate::floor_date(date_recorded, "month")) |> summarize(mean = mean(sale_amount)) |> ggplot() +
          geom_col(aes(x = month, y = mean))

housing_Connecticut |> select(c(date_recorded,sale_amount)) |> group_by(month = lubridate::floor_date(date_recorded, "month")) |> summarize(median = median(sale_amount)) |> ggplot() +
          geom_col(aes(x = month, y = median))
```
```{r}
housing_Connecticut |> select(c(date_recorded,sale_amount)) |> group_by(year = year(date_recorded)) |> summarize(mean = mean(sale_amount)) |> ggplot() +
          geom_col(aes(x = year, y = mean))

housing_Connecticut |> select(c(date_recorded,sale_amount)) |> group_by(year = year(date_recorded)) |> summarize(median = median(sale_amount)) |> ggplot() +
          geom_col(aes(x = year, y = median))
```


```{r}
#download.file("https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/jdegene/steamHWsurvey","data/zipped")
#unzip("data/zipped")
#COULD NOT DOWNLOAD CSV FILE AUTOMATICALLY IN R CODE FROM GITHUB AS IT ALWAYS SEEMS TO DOWNLOAD A HTML TEXT FILE
#=>THE CSV FILE HAS TO BE DOWNLOADED MANUALLY
#DOWNLOAD LINK: https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/jdegene/steamHWsurvey

shs <- read_csv("data/shs.csv")
shs_date_split <- shs |> group_split(date)
```

```{r}
#shs |> filter(category == "AMD CPU Speeds") |> pull(name) |> unique()
shs |> filter(category == "AMD CPU Speeds") |> ggplot() +
        geom_col(aes(x = date,y = percentage, fill = name)) +
        facet_wrap(~name) +
        labs(title = "Evolution of AMD CPU speeds over the years")
```

```{r}
shs |> filter(category == "Intel CPU Speeds") |> ggplot() +
        geom_col(aes(x = date,y = percentage, fill = name)) +
        facet_wrap(~name) +
        labs(title = "Evolution of Intel CPU speeds over the years")
```

```{r}
shs_date_split[150]
shs |> filter(category == "Free Hard Drive Space") |> ggplot() +
        geom_col(aes(x = date,y = percentage, fill = name)) +
        facet_wrap(~name) +
        labs(title = "Evolution of free hard drive space over the years")
```


